{
  "mode": "prepush",
  "status": "fail",
  "checks": [
    {
      "name": "docs-links",
      "status": "PASS",
      "duration_sec": 0.0,
      "details": "All local links are valid"
    },
    {
      "name": "todo-machine",
      "status": "FAIL",
      "duration_sec": 0.04,
      "details": "epic-ai-automation: progress_pct 6.3 is inconsistent with big tasks (18)"
    },
    {
      "name": "architecture-doc",
      "status": "PASS",
      "duration_sec": 0.0,
      "details": "Architecture overview contains required sections"
    },
    {
      "name": "roadmap",
      "status": "FAIL",
      "duration_sec": 0.03,
      "details": "Roadmap status mismatch for epic-plugin-platform (found in_progress)"
    },
    {
      "name": "banned-markers",
      "status": "PASS",
      "duration_sec": 0.2,
      "details": "Forbidden markers under control (total 162)"
    },
    {
      "name": "agents",
      "status": "PASS",
      "duration_sec": 0.12,
      "details": "Agent adapters emit structured errors without dependencies"
    },
    {
      "name": "rust-fmt",
      "status": "PASS",
      "duration_sec": 2.39,
      "details": "cargo fmt --all -- --check"
    },
    {
      "name": "rust-clippy",
      "status": "PASS",
      "duration_sec": 16.54,
      "details": "Clippy warnings: 0 (match baseline)"
    },
    {
      "name": "rust-test",
      "status": "PASS",
      "duration_sec": 31.18,
      "details": "cargo test --workspace --all-features"
    },
    {
      "name": "rust-nextest",
      "status": "FAIL",
      "duration_sec": 4.99,
      "details": "Command cargo nextest run --workspace --exclude cairo-sys-rs --exclude freetype --exclude fontconfig --exclude harfbuzz exited with code 100"
    }
  ],
  "commands": {
    "agent-smoke": {
      "command": "/usr/bin/python3 /home/amir/\u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u044b/PROJECTS/Shelldone/scripts/agentd.py smoke",
      "duration_sec": "0.12",
      "exit_code": "0",
      "output_tail": "OK openai: openai-agents \u043d\u0435 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d. \u0412\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u0435 `pip install -r agents/openai/requirements.lock` \u0432 \u0432\u0438\u0440\u0442\u0443\u0430\u043b\u044c\u043d\u043e\u043c \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u0438.\nOK claude: \u041f\u0430\u043a\u0435\u0442 @anthropic-ai/sdk \u043d\u0435 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d. \u0412\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u0435 `npm ci` \u0432 agents/claude.\nOK microsoft: \u041f\u0430\u043a\u0435\u0442 @microsoft/agents-sdk \u043d\u0435 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d. \u0412\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u0435 `npm ci` \u0432 agents/microsoft.\n"
    },
    "rust-fmt": {
      "command": "cargo +nightly fmt --all -- --check",
      "duration_sec": "2.39",
      "exit_code": "0",
      "output_tail": ""
    },
    "rust-clippy": {
      "command": "cargo clippy --workspace --all-features --message-format=json --exclude cairo-sys-rs --exclude freetype --exclude fontconfig --exclude harfbuzz -- --no-deps",
      "duration_sec": "16.54",
      "warning_count": "0"
    },
    "rust-test": {
      "command": "cargo test --workspace --all-features --exclude cairo-sys-rs --exclude freetype --exclude fontconfig --exclude harfbuzz",
      "duration_sec": "31.18",
      "exit_code": "0",
      "output_tail": "shelldone_version\n\nrunning 0 tests\n\ntest result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n\n   Doc-tests spawn_funcs\n\nrunning 0 tests\n\ntest result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n\n   Doc-tests ssh_funcs\n\nrunning 0 tests\n\ntest result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n\n   Doc-tests tabout\n\nrunning 0 tests\n\ntest result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n\n   Doc-tests termwiz\n\nrunning 3 tests\ntest termwiz/src/lineedit/mod.rs - lineedit (line 4) - compile ... ok\ntest termwiz/src/lineedit/mod.rs - lineedit::LineEditor (line 58) - compile ... ok\ntest termwiz/src/lineedit/mod.rs - lineedit::LineEditor<'term>::new (line 141) - compile ... ok\n\ntest result: ok. 3 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.07s\n\n   Doc-tests termwiz_funcs\n\nrunning 0 tests\n\ntest result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n\n   Doc-tests time_funcs\n\nrunning 0 tests\n\ntest result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n\n   Doc-tests umask\n\nrunning 0 tests\n\ntest result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n\n   Doc-tests url_funcs\n\nrunning 0 tests\n\ntest result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n\n   Doc-tests vtparse\n\nrunning 0 tests\n\ntest result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n\n   Doc-tests window\n\nrunning 1 test\ntest target/debug/build/window-4b3b5f48096f77c9/out/egl_bindings.rs - egl::ffi::generated::Egl::load_with (line 376) ... ignored\n\ntest result: ok. 0 passed; 0 failed; 1 ignored; 0 measured; 0 filtered out; finished in 0.00s\n\n   Doc-tests window_funcs\n\nrunning 0 tests\n\ntest result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n\n"
    },
    "rust-nextest": {
      "command": "cargo nextest run --workspace --exclude cairo-sys-rs --exclude freetype --exclude fontconfig --exclude harfbuzz",
      "duration_sec": "4.99",
      "exit_code": "100",
      "output_tail": "e_ack e2e_sigma_guard_journal_event\n        PASS [   0.133s] shelldone-surface hyperlink::test::parse_with_parentheses\n        PASS [   0.214s] shelldone-agentd::e2e_mcp_grpc grpc_mutual_tls_blocks_client_without_certificate\n        PASS [   0.182s] shelldone-gui::bin/shelldone-gui shapecache::test::ligatures_jetbrains\n        PASS [   0.276s] shelldone-agentd::e2e_ack e2e_concurrent_requests\n        FAIL [   0.514s] shelldone-agentd::e2e_mcp_grpc tls_hot_reload_accepts_rotated_certificate\n  stdout \u2500\u2500\u2500\n\n    running 1 test\n    test tls_hot_reload_accepts_rotated_certificate ... FAILED\n\n    failures:\n\n    failures:\n        tls_hot_reload_accepts_rotated_certificate\n\n    test result: FAILED. 0 passed; 1 failed; 0 ignored; 0 measured; 2 filtered out; finished in 0.50s\n\n  stderr \u2500\u2500\u2500\n\n    thread 'tls_hot_reload_accepts_rotated_certificate' panicked at shelldone-agentd/tests/e2e_mcp_grpc.rs:171:29:\n    called `Result::unwrap()` on an `Err` value: Address already in use (os error 98)\n    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n\n    thread 'tls_hot_reload_accepts_rotated_certificate' panicked at shelldone-agentd/tests/e2e_mcp_grpc.rs:276:10:\n    called `Result::unwrap()` on an `Err` value: tonic::transport::Error(Transport, ConnectError(ConnectError(\"tcp connect error\", 127.0.0.1:37017, Os { code: 111, kind: ConnectionRefused, message: \"Connection refused\" })))\n\n  Cancelling due to test failure: 4 tests still running\n        PASS [   0.518s] shelldone-agentd::e2e_mcp_grpc grpc_mutual_tls_allows_authorized_client\n        PASS [   1.420s] shelldone-bidi::conformance bidi_character_test\n        PASS [   3.852s] shelldone-gui::bin/shelldone-gui shapecache::test::bench_shaping\n        PASS [   4.040s] shelldone-bidi::conformance bidi_test\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n     Summary [   4.082s] 480 tests run: 479 passed, 1 failed, 0 skipped\n        FAIL [   0.514s] shelldone-agentd::e2e_mcp_grpc tls_hot_reload_accepts_rotated_certificate\nerror: test run failed\n"
    }
  }
}
